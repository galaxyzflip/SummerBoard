<?xml version="1.0" encoding="UTF-8"?>


<!DOCTYPE sqlMap      
    PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"      
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">


<sqlMap namespace="board">

	<typeAlias alias="BoardModel"
		type="net.nice19.smboard.board.model.BoardModel" />

	<typeAlias alias="BoardCommentModel"
		type="net.nice19.smboard.board.model.BoardCommentModel" />

	<select id="getBoardList" parameterClass="java.util.HashMap" resultClass="BoardModel">
	
		SELECT
		    b.idx,    b.writer,    b.subject,    b.content,    b.hitcount,    b.recommendcount,
		    to_char(b.writedate, 'yyyy-mm-dd- hh24:mi:ss') writedate,    COUNT(b.idx) AS "comment",
		    b.writerid,    b.filename,    b.rnum
		FROM
		    (
		        SELECT
		            a.idx,  a.writer,  a.subject,  a.content, a.hitcount,  a.recommendcount,
		            a.writedate,  a.writerid, a.filename,  ROWNUM rnum
		        FROM
		            (
		                SELECT
		                    idx, writer, subject, content, hitcount, recommendcount, writedate, writerid, filename
		                FROM
		                    jmboard
		                ORDER BY
		                    idx DESC
		            ) a
		    ) b
		    LEFT OUTER JOIN jmboard_comment c ON b.idx = c.linkedarticlenum 
				 where rnum between #startArticleNum# and #endArticleNum#
		GROUP BY
		    b.idx,    b.writer,    b.subject,    b.content,    b.hitcount,    b.recommendcount,
		    b.writedate,    b.rnum,    b.writerid,    b.filename
		ORDER BY
		    b.idx DESC
	
	</select>
	
	<select id="getTotalNum" resultClass="int">
		select count(idx) from jmboard
	</select>
	
	<select id="getSearchTotalNum" resultClass="int">
		select count(idx) from jmboard where $type$ like '%$keyword$%'
	</select>
	
	<select id="searchArticle" parameterClass="java.util.HashMap" resultClass="BoardModel">
	
		SELECT
		    b.idx, b.writer, b.subject, b.content,  b.hitcount,  b.recommendcount,
		    to_char(b.writedate, 'yyyy-mm-dd hh24:mi:ss') writedate,  COUNT(c.idx) AS "comment",    b.writerid,
		    b.filename,  b.rnum 
		    
		    from 
		
				(select a.idx, a.writer, a.subject, a.content, a.hitcount, a.recommendcount, 
				a.writedate, a.writerid, a.filename, rownum rnum 
		
		from
		    (select idx, writer, subject, content, hitcount, recommendcount, writedate, writerid, filename
		    	
		    	from  jmboard where $type$ like '%$keyword$%' order by idx desc) a
		    
		    )b left outer join jmboard_comment c on b.idx = c.linkedArticlenum where rnum between #startArticleNum# and #endArticleNum#
		GROUP BY
		    b.idx,  b.writer,  b.subject,  b.content,  b.hitcount,  b.recommendcount,
		    b.writedate, b.rnum, b.writerid,  b.filename
		ORDER BY
		    b.idx DESC
	
	
	</select>


	<select id="getOneArticle" parameterClass="int" resultClass="BoardModel">
	
		select idx, writer, subject, content, hitcount, recommendcount, writedate, writerid, filename
		from jmboard where idx = #idx#
	</select>
	
	<select id="getcommentList" parameterClass="int" resultClass="BoardCommentModel">
	
		select idx, writer, content, writeDate, linkedArticleNum, writerId 
		from jmboard_comment
		where linkedArticleNum = #idx#
		order by idx desc
	
	</select>
	
	<select id="getOneComment" parameterClass="int" resultClass="BoardCommentModel">
		select idx, writer, content, writeDate, linkedArticleNum, wrtierId
		from jmboard_comment
		where idx = #idx#
	
	</select>

	<insert id="writeArticle" parameterClass="boardModel">
		insert into
		jmboard(idx, writer, subjevct, content, hitcount, recommendcount,
		writeDate, writerId, fileName)
		values(boardlistsql.nextVal, #writer#,
		#subject#, #content#, 0, 0, sysdate, #writerId#, #fileName#)
	</insert>

	<insert id="writeComment" parameterClass="BoardCommentModel">
		insert into
		jmboard_comment(idx, writer, content, writeDate, linkedArticleNum,
		writerId)
		values(boardCommentSeq.nextVal, #writer#, #content#, sysdate,
		#linkedArticleNum#, #writerId#)

	</insert>

	<update id="updateRecommendcount"
		parameterClass="java.util.HashMap">
		update jmboard set recommentcount = #recommentcount#
		where idx = #idx#
	</update>

	<delete id="deleteComment" parameterClass="int">
		delete from
		jmboard_comment where idx = #idx#
	</delete>

	<delete id="deleteArticle" parameterClass="int">
		delete from jmboard
		where idx = #idx#
	</delete>

	<update id="modifyArticle" parameterClass="BoardModel">
		update jmboard set
		subject = #subject#, content = #content#, fileName = #fileName#
		where
		idx = #idx#
	</update>



</sqlMap>











